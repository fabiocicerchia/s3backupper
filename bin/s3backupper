#!/bin/bash

VERSION=1.0.0
DEEP_INTEGRITY_CHECK=0
VERBOSE=0

source conf/aws

COMMAND=$1

while getopts ":dvh" opt; do
  case ${opt} in
    d )
      DEEP_INTEGRITY_CHECK=1
      ;;
    v )
      VERBOSE=1
      ;;
    h )
      COMMAND="help"
      ;;
  esac
done

if [ "$COMMAND" == "help" -o "$COMMAND" == "" ]; then
    echo "S3Backupper v$VERSION by Fabio Cicerchia"
    echo ""
    echo "Usage: $0 [COMMAND] [-h] [-dv] [RESTORE_FOLDER]"
    echo -e "\nCommands:\n"
    echo "backup    Create a new backup snapshot."
    echo "browse    Mount locally and browse the files."
    echo "help      Show help."
    echo "restore   Restore an existent backup snapshot."
    echo "version   Print current version."
    echo -e "\nOptions:\n"
    echo "-d   Enable Deep Integrity Checks."
    echo "     Since it has to download all data files in the repository,"
    echo "     beware that it might incur higher bandwidth costs than usual"
    echo "     and also that it takes more time than the default check."
    echo "     (default: off)"
    echo "-v   Verbose."
    echo "-h   Help."
    echo -e "\nExamples:\n"
    echo " $0 backup -d"
    echo " $0 browse /mnt/latest-backup"
    echo " $0 restore /path/to/restored/backup"
    exit 0
elif [ "$COMMAND" == "backup" ]; then
    echo "### BACKUPPING FILES"
    VERBOSE_FLAG=""
    if [ $VERBOSE -eq 1 ]; then
        VERBOSE_FLAG="--verbose"
    fi
    for ITEM in $(cat conf/files); do
        echo "> Backupping '$ITEM'..."
        restic -r s3:s3.amazonaws.com/$bucket $VERBOSE_FLAG backup $ITEM
    done

    echo "### INTEGRITY CHECKS"
    CHECK_FLAG=""
    if [ $DEEP_INTEGRITY_CHECK -eq 1 ]; then
        CHECK_FLAG="--read-data"
    fi
    restic -r s3:s3.amazonaws.com/$bucket $VERBOSE_FLAG check $CHECK_FLAG
    exit 0

elif [ "$COMMAND" == "browse" ]; then
    TARGET_RESTORE_FOLDER=$2
    restic -r s3:s3.amazonaws.com/$bucket $VERBOSE_FLAG mount $TARGET_RESTORE_FOLDER
    exit 0

elif [ "$COMMAND" == "restore" ]; then
    TARGET_RESTORE_FOLDER=$2
    restic -r s3:s3.amazonaws.com/$bucket $VERBOSE_FLAG restore latest --target $TARGET_RESTORE_FOLDER
    exit 0

elif [ "$COMMAND" == "version" ]; then
    echo $VERSION
    exit 0

fi
